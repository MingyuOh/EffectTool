//#pragma once
//#include "Node.h"
//
//#define OCTREE 8
//#define OCTREE_MIN_DEPTH 1
//#define OCTREE_MAX_DEPTH 4
//#define OCTREE_CORNER_COUNT 20
//
//class Octree
//{
//private:
//	Node*				m_pRootNode;
//	queue<Node*>		m_Queue;
//	vector<Node*>		m_pLeafNodeList;
//	int					m_iMaxDepth;
//	int					m_iNodeCount;
//	HeightMap*			m_pHeightMap;
//public:
//	//--------------------------------------------------------------------------------------
//	// Init(Input iMaxDepth)
//	//--------------------------------------------------------------------------------------
//	void				Init(int iMaxDepth);
//	//--------------------------------------------------------------------------------------
//	// Create index buffer
//	//--------------------------------------------------------------------------------------
//	bool				CreateIndexBuffer(Node* pNode);
//	//--------------------------------------------------------------------------------------
//	// Create
//	//--------------------------------------------------------------------------------------
//	bool				Create(HeightMap* pHeightMap);
//	//--------------------------------------------------------------------------------------
//	// Create node
//	//--------------------------------------------------------------------------------------
//	Node*				CreateNode(Node* pParent, TVector3 vMin, TVector3 vMax);
//	//--------------------------------------------------------------------------------------
//	// Create octree
//	//--------------------------------------------------------------------------------------
//	bool				CreateOctree(Node* pNode);
//	//--------------------------------------------------------------------------------------
//	// Divide space
//	//--------------------------------------------------------------------------------------
//	bool				DivideTree(Node* pNode);
//	//--------------------------------------------------------------------------------------
//	// Find node
//	//--------------------------------------------------------------------------------------
//	Node*				FindNodeInOctree(TVector3 vPos);
//	//--------------------------------------------------------------------------------------
//	// Delete an object from the list of objects in a node
//	//--------------------------------------------------------------------------------------
//	bool				DeleteObject(Node* pNode, Object* object);
//	//--------------------------------------------------------------------------------------
//	// Add object in octree
//	//--------------------------------------------------------------------------------------
//	bool				AddInOctree(Node* pNode, Object* object);
//	//--------------------------------------------------------------------------------------
//	// Update
//	//--------------------------------------------------------------------------------------
//	bool				UpdateOctree(Object* object, TVector3 vPos);
//	//--------------------------------------------------------------------------------------
//	// Update index list
//	//--------------------------------------------------------------------------------------
//	bool				UpdateIndexList(Node* pNode);
//	//--------------------------------------------------------------------------------------
//	// Render
//	//--------------------------------------------------------------------------------------
//	bool				Render(ID3D11DeviceContext* pContext);
//	//--------------------------------------------------------------------------------------
//	// Release
//	//--------------------------------------------------------------------------------------
//	bool				Release();
//	//--------------------------------------------------------------------------------------
//	// Get Function
//	//--------------------------------------------------------------------------------------
//	Node*				GetRootNode();
//	int					GetNodeCountInOctree();
//public:
//	Octree();
//	~Octree();
//};
//
