#pragma once
#include "Object.h"

//--------------------------------------------------------------------------------------
// 씬 프레임 구조체
//--------------------------------------------------------------------------------------
struct SceneFrame
{
	int iFristFrame;
	int iLastFrame;
	int iFrameSpeed;
	int iTickPerFrame;
};

//--------------------------------------------------------------------------------------
// 페이스 인덱스 구조체
//--------------------------------------------------------------------------------------
struct Face_Index
{
	int iIndex[3];
	int	iSubMtrl;
};

//--------------------------------------------------------------------------------------
// 노말 구조체
//--------------------------------------------------------------------------------------
struct VertexNormal
{
	TVector3 vFace;
	TVector3 vVertex[3];
};

//--------------------------------------------------------------------------------------
// 메터리얼 구조체
//--------------------------------------------------------------------------------------
struct TexMap
{
	int iType;
	T_STR name;
};

//--------------------------------------------------------------------------------------
// 메터리얼 구조체
//--------------------------------------------------------------------------------------
struct GeometryMaterial
{
	ComPtr<ID3D11ShaderResourceView>	m_pSRV;
	vector<TexMap>						m_texMap;
	vector<GeometryMaterial>			subMaterial;
	int									iNumSubMaterial;
};

//--------------------------------------------------------------------------------------
// 애니메이션 트랙 구조체
//--------------------------------------------------------------------------------------
struct Animtrack
{
	int iTick;
	TVector3 vPos;
	TQuaternion vRot;
};

//--------------------------------------------------------------------------------------
// 오브젝트 데이터 구조체
//--------------------------------------------------------------------------------------
struct GeomObjectData
{
	//--------------------------------------------------------------------------------------
	// Vertex / Face / Texture / Color 개수 / MESH_MTLID
	//--------------------------------------------------------------------------------------
	int						m_iMaterialRef;
	int						m_iNumVertex;		 // 버텍스 
	int						m_iNumFace;
	int						m_iNumTexVertex;	 // 텍스쳐
	int						m_iNumTexFace;
	int						m_iNumColorVertex;	 // 컬러
	int						m_iNumColorFace;
	//--------------------------------------------------------------------------------------
	// 노드 / 부모 / 클래스 이름
	//--------------------------------------------------------------------------------------
	wstring					m_szNodeName;
	wstring					m_szParentName;
	wstring					m_szClassName;
	//--------------------------------------------------------------------------------------
	// HELPEROBJECT 바운딩박스 MIN / MAX
	//--------------------------------------------------------------------------------------
	TVector3				m_vMin;
	TVector3				m_vMax;
	//--------------------------------------------------------------------------------------
	// 씬 정보
	//--------------------------------------------------------------------------------------
	SceneFrame				m_Scene;
	//--------------------------------------------------------------------------------------
	// 버텍스 리스트
	//--------------------------------------------------------------------------------------
	vector<TVector3>		m_VertexArray;
	//--------------------------------------------------------------------------------------
	// 페이스 인덱스 리스트
	//--------------------------------------------------------------------------------------
	vector<Face_Index>		m_FaceArray;
	//--------------------------------------------------------------------------------------
	// 텍스트 버텍스 리스트
	//--------------------------------------------------------------------------------------
	vector<TVector3>		m_TexVertexArray;
	//--------------------------------------------------------------------------------------
	// 텍스트 페이스 리스트
	//--------------------------------------------------------------------------------------
	vector<Face_Index>		m_TexFaceArray;
	//--------------------------------------------------------------------------------------
	// 컬러 버텍스 리스트
	//--------------------------------------------------------------------------------------
	vector<TVector3>		m_ColorVertexArray;
	//--------------------------------------------------------------------------------------
	// 컬러 페이스 리스트
	//--------------------------------------------------------------------------------------
	vector<Face_Index>		m_ColorFaceArray;
	//--------------------------------------------------------------------------------------
	// 노말 리스트
	//--------------------------------------------------------------------------------------
	vector<VertexNormal>	m_FaceNormalArray;
	//--------------------------------------------------------------------------------------
	// 애니메이션 트랙
	//--------------------------------------------------------------------------------------
	vector<Animtrack>		m_PosTrack;
	vector<Animtrack>		m_RotTrack;
	vector<Animtrack>		m_ScaleTrack;
	//--------------------------------------------------------------------------------------
	// 애니메이션 행렬
	//--------------------------------------------------------------------------------------
	TMatrix					m_matCaculation;
	TMatrix					m_matTrans;
	TMatrix					m_matScale;
	TMatrix					m_matRotation;
	TQuaternion				m_qRotation;
	TQuaternion				m_qScale;
};


class GeomObj :public Object
{
public:
	//--------------------------------------------------------------------------------------
	// 오브젝트 데이터
	//--------------------------------------------------------------------------------------
	GeomObjectData				m_Object;
	//--------------------------------------------------------------------------------------
	// 부모 객체 / 인덱스
	//--------------------------------------------------------------------------------------
	GeomObj*					m_pParentObj;
	int							m_iParentID;
	//--------------------------------------------------------------------------------------
	// 서브매터리얼 구조에 사용되는 리스트
	//--------------------------------------------------------------------------------------
	typedef vector<PNCT_VERTEX> SUBVERTEXLIST;
	vector<SUBVERTEXLIST>		m_subVertexList;
	typedef vector<DWORD>		SUBINDEXLIST;
	vector<SUBINDEXLIST>		m_subIndexList;
	vector<SUBVERTEXLIST>		m_subUniqueVertexList;
	//--------------------------------------------------------------------------------------
	// 멀티 정점 버퍼
	//--------------------------------------------------------------------------------------
	vector<ID3D11Buffer*>		m_VBArray;
	//--------------------------------------------------------------------------------------
	// 멀티 인덱스 버퍼
	//--------------------------------------------------------------------------------------
	vector<ID3D11Buffer*>		m_IBArray;
public:
	//-----------------------------------------------------------------------------------
	// 정점 버퍼 생성
	//--------------------------------------------------------------------------------------
	HRESULT			CreateVertexBuffer();
	//--------------------------------------------------------------------------------------
	// 인덱스 버퍼 생성
	//--------------------------------------------------------------------------------------
	HRESULT			CreateIndexBuffer();
	//--------------------------------------------------------------------------------------
	// 상수 버퍼 생성
	//--------------------------------------------------------------------------------------
	HRESULT			CreateConstantBuffer();
	//--------------------------------------------------------------------------------------
	// 서브매터리얼 버퍼 생성
	//--------------------------------------------------------------------------------------
	void			SetUniqueBuffers(vector<PNCT_VERTEX>& vertexArray, int iSub);
	//--------------------------------------------------------------------------------------
	// 중복 정점 체크
	//--------------------------------------------------------------------------------------
	int				isEqualVertexList(vector<PNCT_VERTEX>& UniqueVertexArray, PNCT_VERTEX& vertex);
	//--------------------------------------------------------------------------------------
	// 사용자 재정의 함수
	//--------------------------------------------------------------------------------------
	bool			Render(ID3D11DeviceContext* pContext);
public:
	GeomObj();
	~GeomObj();
};