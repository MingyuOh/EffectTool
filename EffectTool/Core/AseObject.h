#pragma once
#include "GeomObj.h"

class AseObject :public Object
{
public:
	//--------------------------------------------------------------------------------------
	// 파일 스트림
	//--------------------------------------------------------------------------------------
	FILE*					m_pStream;
	//--------------------------------------------------------------------------------------
	// 파일내용을 읽어 올 버퍼
	//--------------------------------------------------------------------------------------
	TCHAR					m_pBuffer[256];
	TCHAR					m_pString[256];
	//--------------------------------------------------------------------------------------
	// 오브젝트 / 매터리얼 수
	//--------------------------------------------------------------------------------------
	int						m_iNumObject;
	int						m_iNumMaterial;
	int						m_iNumSubMaterial; 
	//--------------------------------------------------------------------------------------
	// 씬 프레임 변수
	//--------------------------------------------------------------------------------------
	SceneFrame				m_Scene;
	//--------------------------------------------------------------------------------------
	// 오브젝트 벡터
	//--------------------------------------------------------------------------------------
	vector<GeomObj>			m_GeomObjectList;
	//--------------------------------------------------------------------------------------
	// 매터리얼 리스트
	//--------------------------------------------------------------------------------------
	vector<GeometryMaterial>m_MaterialList;
	//--------------------------------------------------------------------------------------
	// 틱프레임
	//--------------------------------------------------------------------------------------
	float					m_fTickFrame;
	//--------------------------------------------------------------------------------------
	// 파일 이전위치로 옮기기 위한 변수
	//--------------------------------------------------------------------------------------
	fpos_t					m_FilePosition;
public:
	//--------------------------------------------------------------------------------------
	// 파일 로드
	//--------------------------------------------------------------------------------------
	bool					Load(T_STR szFileName);
	//--------------------------------------------------------------------------------------
	// 섹션에 따른 파일 라인 로드
	//--------------------------------------------------------------------------------------
	bool					Load3DMax(); 
	bool					LoadComment();
	bool					LoadScene();
	bool					LoadMaterialList();
	bool					LoadMaterial();
	bool					LoadObject();
	bool					LoadMesh();
	bool					LoadAnimation();
	//--------------------------------------------------------------------------------------
	// 섹션에 따른 파일 내용 로드
	//--------------------------------------------------------------------------------------
	int						GetSection(T_STR* ppObjectType, int iNum);
	//--------------------------------------------------------------------------------------
	// 
	//--------------------------------------------------------------------------------------
	HRESULT					CreateLoad(T_STR TextureName = _T(""), T_STR vertexShaderName = _T(""),
									   T_STR PixelShaderName = _T(""), T_STR geometryShaderName = _T(""));
	//--------------------------------------------------------------------------------------
	// 버텍스 버퍼 생성
	//--------------------------------------------------------------------------------------
	HRESULT					CreateVertexBuffer();
	//--------------------------------------------------------------------------------------
	// 상수 버퍼 생성
	//--------------------------------------------------------------------------------------
	HRESULT					CreateConstantBuffer();
	//--------------------------------------------------------------------------------------
	// 보간 함수
	//--------------------------------------------------------------------------------------
	void					Interpolate(GeomObj* pGeom, TMatrix* matParents, float fFrameTick);
	//--------------------------------------------------------------------------------------
	// 프레임에 따른 트랙정보 반환
	//--------------------------------------------------------------------------------------
	bool					GetAnimationTrack(float fFrame,
												vector<Animtrack>* pTrackList,
												Animtrack** pStartTrack,
												Animtrack** pEndTrack);
	//--------------------------------------------------------------------------------------
	// 부모 오브젝트 검색
	//--------------------------------------------------------------------------------------
	int						SearchToObject(wstring szParent);
	//--------------------------------------------------------------------------------------
	// 재정의 함수
	//--------------------------------------------------------------------------------------
	bool					Frame();
	bool					Render(ID3D11DeviceContext* pContext);
public:
	AseObject();
	~AseObject();
};

